ho cercato di segnarmi tutte le domande che ho trovato e le domande a cui si puÃ² collegare il prof dopo:

ESERCIZI WEB CHAT 
- cos'Ã¨ websocket e cosa permette di fare -> canale SIMMETRICO e BIDIREZIONALE ( HTTP non poteva )
- cosa fa un protocol upgrade -> Ci fa smettere di parlare in HTTP ed iniziamo a mandare messaggi secondo un altro protocollo
- quale funzione di websocket non si puÃ² fare con http -> il PUSH DEL SERVER VERSO CLIENT ( visto che in HTTP srv risponde SOLO alle richieste del client )
- a che livello opera websocket -> PROTOCOLLO DI LVL APPLICATIVO

ANALISI DI RETE CON WIRESHARK -> Ricordarsi di impostare la LOOPBACK come interfaccia di rete
- perchÃ© usare sudo? -> Servono i permessi di ROOT per accedere ai lvl di rete

CHE SICUREZZA USA LA CHAT WEB 
- evoluzione da http a https -> Aggiungo uno strato TLS/SSL dove c'Ã¨ autenticazione + instaurazione di una chiave di sessione
- proprietÃ  del TLS -> crittografia, autenticazione e integritÃ  dei dati

ESERCIZI SU WEBSERVICE 
- microservizi

COME RENDERE PIÃ™ SICURA LA CHAT WEBSOCKET -> se avevo HTTPS allora NON serve fare nulla perche Ã¨ giÃ  sicura
- e se fosse stata fatta in Java/c invece

DIFFERENZA ESERCIZI SOMMATRICE UDP E TCP
- soa
- rest

ESERCIZI SU PROTOCOLLI TCP/UDP
- cos'Ã¨ il socket 
- su che criterio si sceglie il protocollo -> VelocitÃ  / affidabilitÃ  che mi serve...Posso tollerare una perdita?
- confronto tra Pub/Sub e Client/Server
- vantaggi, svantaggi e perchÃ© usare Pub/Sub
- come si farebbe un'app di domotica con Pub/Sub
- vulnerabilitÃ  nel Pub/Sub -> Se non cifro il messaggio ho una vulnerabilitÃ  quando il msg Ã¨ nel BROKER

PARALLELIZZAZIONE WEBSERVICE 
- stub e skeleton 
- vantaggi microservizi e collo di bottiglia 
- spreco di risorse e discorso economico 

CHAT WEBSOCKET
- come Ã¨ fatta lato client  e lato server
- perchÃ© in js e non in Java/C
- cifratura simmetrica

WIRESHARK E STRUMENTI PIÃ™ SEMPLICI 
- nslookup, whois, ping...
- cos'Ã¨ RTT
- ping:che tipo di traffico 

SCARICAMENTO FILE DA BROWSER
- che protocollo usa
- se apro wireshark cosa vedo
- a cosa serve "follow TCP stream"

CHAT PUB/SUB
- come Ã¨ fatta e che protocollo usa -> MQTT ( che Ã¨ quello piÃ¹ semplice ) 
- affidabilitÃ  
- perchÃ© usare QoS se c'Ã¨ giÃ  TCP ( TCP Ã¨ sulla singola tratta e NON end-to-end )
- cifratura asimmetrica -> Chiave PUBBLICA e PRIVATA, molto onerosa e non mi richiede un entitÃ  terza...Algoritmi: MD5 e SHA

COS'Ãˆ AUTENTICAZIONE
- tipi e tecniche di autenticazione

CERTIFICATI CA
- come Ã¨ composto 
- come si ottiene
- chi genera le chiavi e dove finiscono
- perchÃ© fidarsi degli enti di certificazione



------------------



1)Esercizio sullâ€™upload dei file

2)Firewall - IDS

3)E una domanda generica su websocket



------------------



- Esercizio sulle SOA, far vedere e spiegare perchÃ© (e come funziona a grandi linee) il codice relativo al calcolo dei numeri primi da 1 a 1000000;
- differenze tra sistema client/server e PUB/SUB;
- vulnerabilitÃ  PUB/SUB;
- vulnerabilitÃ  che distingue il modello PUB/SUB rispetto allâ€™integritÃ  dei dati e al TLS (bohðŸ˜‚)


------------------


REST ottimizzato e NON
- cosa permette di fare questo modo di operare ( SOA )
- Pro e contro 
- Firewall e Intrusion Detection System
- Dove viene messo il Firewall -> Router di frontiera
- Dove si applica IDS -> Interno alla rete
- PerchÃ¨ si deve aprire in ROOT wireshark? -> Altrimenti non posso fare la cattura ma solamente analizzare le mie catture


------------------


CHAT WEB SOCKET:
- come funziona
- cosa permetted di fare rispetto ad HTTP -> Canale full duplex ( BIDIREZIONALE ) senza che server deve aspettare le richieste del client
- che tipo di programmazione Ã¨ -> tipo reattivo rispetto a batch
- Come viene fatta l'autenticazione -
- che tipo di autenticazione remota esiste -> Diretta ed INDIRETTA
- Spiegare il meccanismo di autenticazione remota indiretta



------------------



UPLOAD SU SERVER:
- mostare codice e spiegarlo nel dettaglio -> aprire il codice sorgente
- PerchÃ¨ si Ã¨ scelto TCP -> Protocollo affidabile e NON sicuro
- Aprire wireshark per analizzare il traffico di rete 
- Che filtro posso applicare? E perchÃ¨ ?
- Come posso vedere tutta la connessione e non pacchetto per pacchetto? -> FUNZIONALITÃ€ di FOLLOW TCP STREAM
- perchÃ¨ ci sono 2 colori diversi quando faccio FOLLOW TCP STREAM -> Rappresentazione della direzione del traffico
- PerchÃ¨ sono cosÃ¬ tanti questi pacchetti? Devono passare tutti un BYTE alla volta
- Questa applicazione Ã¨ sicura? NO, TCP Ã¨ affidabile ma NON sicuro
- Come rendere sicura questa connessione? Devo aggiungere il layer di TLS/SSL e cosÃ¬ ho garantito la sicurezza
- Quali sono le proprietÃ  della sicurezza? -> integritÃ , segretezza, autenticitÃ , disponibilitÃ , tracciabilitÃ 
- Che cosa vuol dire avere un applicazione sicura? ->

------------------


CHAT PUB/SUB:
- Simulare e mostrare il funzionamento
- Che cosa sono + e # per quanto riguarda i TOPIC GERARCHICI
- Spiegare differenza tra il + e # -> Uno lavora sui PRE-FISSI ( +/.. ) e l'altro sul POST-FISSI ( ../../# ) -> ERA lo scopo dell'Esercizio
- Spiegare le differenti qualitÃ  del servizio -> ( At Most One - At Least One - Exactly One )
- Come scelgo una o l'altra? -> Introduco dei pacchetti a lvl TCP che chiaramente vanno ad occupare la rete
- Che protocollo viene utilizzato per implementare PUB/SUB? -> Si utilizza il TCP sotto ad MQTT 
- Differenza a lvl di traffico di rete tra i vari livelli? Qual'Ã¨ il meno trafficato? -> Qo0
- A che cosa serve il Qo0, sembra una contraddizione...PerchÃ¨ -> lvl TCP mi garantisce sulla singola tratta e NON end to end -> Gli attori qui sono 3
- Cosa potrebbe andare storto? Fare un esempio -> Va giÃ¹ il BROKER quando ha in pancia il dato ( non riesco piÃ¹ a recuperarlo )
- Preparare un discorso di un certificato digitale -> che cos'Ã¨, cosa contiene
- spiegare nel dettaglio che cosa contiene -> coppia nome-host<->IP, scadenza, firma della CA, chiave pubblica di chi vuole essere certificato
- Vogliamio certificare la COPPIA ( X<->IP ) -> X = nome-host
- Cosa rende valido un certificato? -> La firma digitale ( con la sua chiave privata ) della CA ( Certification Autority )
- Cosa me ne faccio di questo certificato? -> Viene utilizzato nel protocollo di sfida per autenticare il server
- Se uno mi clonasse il sito che cosa crollerebbe? -> La coppia nome-host<->IP e non riuscirebbe a fornirmi un certificato valido perchÃ¨ nessuno glielo firmerebbe


------------------


SCAMBIO FILE TRA CLIENT E SERVER:
- Fare una simulazione e commentare che cosa sta succedendo
- Vediamo com'Ã¨ fatto il serer -> Spiegarlo e commentare
- Secondo quale protocollo Ã¨ stata fatta la richiesta? -> Protocollo HTTP 
- Cosa usiamo a livello trasporto? -> Viene creata la connessione TCP, e puÃ² passare qualsiasi cosa
- Com'Ã¨ fatta la richiesta HTTP? -> c'Ã¨ il metodo ( Si trova nell'header )
- Cosa c'Ã¨ nel CORPO? -> Li si trova il file
- Come faccio a capire che HEADER Ã¨ finito? -> Linea vuota ( doppio a capo )
- Andiamo a vedere nel server dove leggo il CORPO
- Quali sono i problemi di sicurezza che ha questa applicazione? -> Certifico il server, connessione NON cifrata e anche l'INTEGRITÃ€
- Se voglio rendere sicura questa applicazione? -> HTTPS
- Cosa fa HTTPS oltre ad aggiungere la cifratura? -> Autenticazione del SERVER
- Come va implementato HTTPS? -> Aggiungo lo strato ( protocollo ) di TLS/SSL
- Dove viene aggiunto lo strato di TLS/SSL? -> Tra TCP e HTTP
- Quali altri comandi abbiamo visto di RETE -> ifconfig, traceroute, ping, whois, nslookup
- Che cos'Ã¨ RTT? -> Round Trip Time, tempo che il pacchetto ci ha impiegato per essere inviato e ritornato
- Che cosa metto come parametro whois -> Indirizzo IP oppure un DOMINIO e mi verrÃ  detto a chi appartiene ( proprio una persona e NON una macchina )
- Che cosa mi ritorna whois -> WHO-IS, quindi colui che ha registrato il DOMINIO -> Proprio nome e cognome / nome della ditta
- nslookup vs whois -> nslookup mi fa la traduzione da nome-host ad IP e poi posso applicare whois per vedere chi effettivamente


------------------


ESEMPIO DEL WEB SERVICES LENTA E VELOCE:
- Architettura separata tra FRONT-END. e BACK-END. -> mi permette di strutturare al meglio il back-end
- Quale sarebbe l'alternativa? -> Architettura MONOLITICA
- Vantaggi di questo approccio? -> delego al srv il calcolo, proprietÃ  intellettuale protetta, modello pay-to-use, eliminazione della pirateria, linguaggi diversi, architetture diverse
- Avendo piÃ¹ srv arrivo a microservizi, perchÃ¨ ha senso?
- come sono strutturate le REST? -> JSON, metodi HTTP, sono molto minimali per la chiamata a funzione remota
- differenza con java RMI? -> si usa http ( ho giÃ  infrastruttura ) e non devo stare li a strutturare e definire Tutto
- all'interno dell'HTTP c'Ã¨ un altra alternativa...SOAP -> Si basava sull'XML
- da che cosa Ã¨ formata l'intestazione di una funzione? -> ritorno, nome funzione, parametri di input



------------------


WEB SOCKET CHAT:
- cosa bisogna fare lato server? -> 
- Che protocollo parlano all'inizio -> HTTP
- Cosa fa prima il serer HTTP? -> Fornisce prima le paagine statiche
- Spiegare cosa serve .css, .html, .js -> stile, struttura della pagina, codice interpretato per programmare il browser
- Come si collega .html e .js -> Attraverso DOM, e nel javascript tramite ID dell'elemento
- Tutto ciÃ² in HTTP, fino che ad un certo punto tramite socket
- Che cosa succede? -> PROTOCOL UPGRADE, smetto di parlare HTTP ed inizio in WEB SOCKET
- da li in poi? -> Cambia il modo di comunicare ( ho un full duplex e NON piÃ¹ richiesta/risposta di client/server ) 
- Server fa il push ed inoltra i messaggi a tutti i collegati
- Cosa fa il server? -> Tiene traccia degli IP perchÃ¨ le connessioni TCP rimangono aperte
- Potrebbe essere un problema? -> Si perchÃ¨ il NAT potrebbe dimenticarsi dall'associazione e quindi devo mandare il messaggio di KEEP ALIVE
- Scopo del KEEP ALIVE? -> ricordare al NAT che la comunicazione Ã¨ ancora attiva e serve
- Valore del certificato sta nella firma digitale della CA -> 
- Quando finisce la CATENA DELLE C.A. ? -> quando trovo un CA fidata alla quale ci si fida
- ModalitÃ  sulla PKI, alternative? -> Blockchain, un db immutabile e distribuito
- su che cosa si basa la fiducia? -> Non c'Ã¨ gerarchia ed Ã¨ peer to peer, e la fiducia si basa sul fatto che magari un nodo si riesce a corrompere ma NON tutti



------------------



PROGRAMMA NUMERI PRIMI ( REST ):
- Eseguire test, spiegare come funziona e che strategie vengono utilizzate
- come fa a 
- 
- 
- 
- 
- 
- 
- 
- 
- 



------------------



TRASFERIMENTO FILE ( tramite interfaccia socket):
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 